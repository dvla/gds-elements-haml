.breadcrumbs
  %ol
    %li= link_to 'GOV.UK elements', elements_index_path
    %li{ "aria-current": "page"} Form elements

%h1.heading-xlarge
  %span.heading-secondary GOV.UK elements
  Form elements

%p.lede.text Keep forms as simple as possible &ndash; only ask what’s needed to run your service.

%h2.heading-small.heading-contents Contents:
.grid-row
  .column-two-thirds
    %ul.list.list-contents
      %li=link_to 'Optional and mandatory fields', '#form-optional-fields'
      %li=link_to 'Labels', '#form-labels'
      %li=link_to 'Form fields', '#form-fields'
      %li=link_to 'Form focus states', '#form-focus-states'
      %li=link_to 'Hint text', '#form-hint-text'
      %li=link_to 'Spacing', '#form-spacing'
      %li=link_to 'File upload', '#form-file-upload'
      %li=link_to 'Fieldsets', '#form-fieldsets'
      %li=link_to 'Select boxes', '#form-select-boxes'
      %li=link_to 'Radio buttons', '#form-radio-buttons'
      %li=link_to 'Checkboxes', '#form-checkboxes'
      %li=link_to 'Conditionally revealing content', '#form-toggle-content'

%h3.heading-medium{ id: 'form-optional-fields'} Optional and mandatory fields
%ul.text.list.list-bullet
  %li only ask for the information you absolutely need
  %li if you do ask for optional information, mark the labels of optional fields with ‘(optional)’
  %li don’t mark mandatory fields with asterisks

%h3.heading-medium{ id: 'form-labels' } Labels
%ul.text.list.list-bullet
  %li all form fields should be given labels
  %li don’t hide labels, unless the surrounding context makes them unnecessary
  %li labels should be aligned above their fields
  %li label text should be short, direct and in sentence case
  %li avoid colons at the end of labels
  %li labels should be associated with form fields using the <code class="code">for</code> attribute

.example
  =label_tag nil,'Full name', class: 'form-label', for: 'full-name-f1'
  =text_field_tag 'full-name-f1', nil, class: 'form-control'

%pre
  %code.language-haml
    :preserve
      =label_tag nil,'Full name', class: 'form-label', for: 'full-name-f1'
      =text_field_tag 'full-name-f1', nil, class: 'form-control'

%h3.heading-medium{ id: 'form-fields'} Form fields
.text
  %p Make field widths proportional to the input they take.
  %p Ensure that users can enter the information they need at smaller screen sizes.
  %p Snap form fields to 100% width at smaller screen sizes.

%p <a href="https://designpatterns.hackpad.com/Text-boxes-imgij2JcsHO" rel="external">Discuss form fields on the design patterns Hackpad</a>

%h3.heading-medium{ id: 'form-focus-states'} Form focus states
.text
  %p All elements use the yellow focus style as a highlight, as either a fill or 3px outline.
  %p Click on the label “Full name” or inside the form field to show the focus state.

.example
  .grid-row
    .column-two-thirds
      =form_tag '/' do
        .form-group
          =label_tag nil,'Full name', class: 'form-label', for: 'full-name-f2'
          =text_field_tag 'full-name-f2', nil, class: 'form-control'
    .column-one-third
      .swatch-wrapper
        %h4.heading-small Focus
        .swatch.swatch-yellow
        %ul
          %li
            %b #FFBF47
          %li $focus-colour

%h3.heading-medium{ id: 'form-hint-text'} Hint text
%ul.list.list-bullet.text
  %li don’t use placeholder text in form fields, as this will disappear once content is entered into the form field
  %li use hint text for supporting contextual help, this will always be shown
  %li hint text should sit above a form field
  %li ensure hint text can be read correctly by screen readers

.example
  =label_tag 'ni-number', class: 'form-label' do
    National Insurance number
    %span.form-hint
      It's on your National Insurance card, benefit letter, payslip or P60.<br>
      For example, ‘QQ 12 34 56 C’.
  =text_field_tag 'ni-number', nil, class: 'form-control'

%pre
  %code.language-haml
    :preserve
      =label_tag 'ni-number', class: 'form-label' do
        National Insurance number
        %span.form-hint
          It's on your National Insurance card, benefit letter, payslip or P60.<br>
          For example, ‘QQ 12 34 56 C’.
      =text_field_tag 'ni-number', nil, class: 'form-control'

%h3.heading-medium{ id: 'form-spacing'} Spacing between form elements
.text Ensure there is sufficient spacing between form elements.

.example
  .form-group
    =label_tag nil,'First name', class: 'form-label', for: 'first-name-2'
    =text_field_tag 'first-name-2', nil, class: 'form-control'
  .form-group
    =label_tag nil,'Last name', class: 'form-label', for: 'last-name-2'
    =text_field_tag 'last-name-2', nil, class: 'form-control'

%pre
  %code.language-haml
    :preserve
      -# Use .form-group to create spacing when wrapping label and input pairs
      .form-group
        =label_tag nil,'First name', class: 'form-label', for: 'first-name-2'
        =text_field_tag 'first-name-2', nil, class: 'form-control'
      .form-group
        =label_tag nil,'Last name', class: 'form-label', for: 'last-name-2'
        =text_field_tag 'last-name-2', nil, class: 'form-control'

%h3.heading-medium{ id: 'form-file-upload' }
%p A control that lets the user select a file.

.example
  =form_tag '/', multipart: true do
    .form-group
      = label_tag nil,'Upload a file', class: 'form-label', for: 'file-input'
      = file_field_tag 'files[]', multiple: true

%pre
  %code.language-haml
    :preserve
      =form_tag '/', multipart: true do
        .form-group
          = label_tag 'file-input', 'Upload a file', class: 'form-label'
          = file_field_tag 'files[]', multiple: true

.text
  %p We recommend using a native input using <code class="code">type="file"</code>, rather than a custom implementation.
  %p.lead-in This is so:
  %ul.list.list-bullet
    %li the control gains focus when tabbing through the page
    %li the control functions using a keyboard
    %li the control functions using assistive technology
    %li the control functions when javascript is not available
  %p A custom implementation of this control would need to meet the criteria above.

%h3.heading-medium{ id: 'form-fieldsets'} Fieldsets and legends
%p.text Use fieldsets to group related form controls. The first element inside a fieldset must be a <code class="code">legend</code> element which describes the group.

%h3.heading-medium{ id: 'form-select-boxes' } Select boxes
%p.text Avoid using select boxes (drop-down lists) - use radio buttons or checkboxes instead.

.example
  .form-group
    = label_tag 'select-box', 'This is the label text', class: 'form-label'
    = select_tag 'select-box', options_for_select(['GOV.UK elements option 1','GOV.UK elements option 2','GOV.UK elements option 3']), class: 'form-control'

%pre
  %code.language-haml
    :preserve
      = label_tag 'select-box', 'This is the label text', class: 'form-label'
      = select_tag 'select-box', options_for_select(['GOV.UK elements option 1','GOV.UK elements option 2','GOV.UK elements option 3']), class: 'form-control'

%p <a href="https://designpatterns.hackpad.com/Select-boxes-KzQ1IRd07HL" rel="external">Discuss select boxes on the design patterns Hackpad</a>


%h3.heading-medium{ id: 'form-radio-buttons'} Radio buttons
%ul.list.list-bullet.text
  %li use these to let users choose a single option from a list
  %li for more than two options, radio buttons should be stacked
  %li radio buttons with large hit areas are easier to select with a mouse or touch devices

%h4.heading-small Inline radio buttons
.example
  %h1.heading-medium Do you already have a personal user account?
  =form_tag '/' do
    .form-group
      %fieldset.inline
        %legend.visually-hidden Do you already have a personal user account?
        = label_tag nil, class: "block-label selection-button-radio", for: "radio-1" do
          = radio_button_tag :personal_account, :yes, nil, id: "radio-1"
          Yes
        = label_tag nil, class: "block-label selection-button-radio", for: "radio-2" do
          = radio_button_tag :personal_account, :no, nil, id: "radio-2"
          No

%pre
  %code.language-haml
    :preserve
      %h1.heading-medium Do you already have a personal user account?
      =form_tag '/' do
        .form-group
          %fieldset.inline
            %legend.visually-hidden Do you already have a personal user account?
            = label_tag nil, class: "block-label selection-button-radio", for: "radio-1" do
              = radio_button_tag :personal_account, :yes, nil, id: "radio-1"
              Yes
            = label_tag nil, class: "block-label selection-button-radio", for: "radio-2" do
              = radio_button_tag :personal_account, :no, nil, id: "radio-2"
              No

%h4.heading-small Stacked radio buttons
.example
  %h1.heading-medium Where do you live?
  =form_tag '/' do
    .form-group
      %fieldset
        %legend.visually-hidden Where do you live?
        = label_tag nil, class: "block-label selection-button-radio", for: "radio-1" do
          = radio_button_tag :place, :ni, nil, id: "radio-1"
          Northern Ireland
        = label_tag nil, class: "block-label selection-button-radio", for: "radio-2" do
          = radio_button_tag :place, :channel, nil, id: "radio-2"
          Isle of Man or the Channel Islands
        %p.form-block or
        = label_tag nil, class: "block-label selection-button-radio", for: "radio-3" do
          = radio_button_tag :place, :abroad, nil, id: "radio-3"
          I am a British citizen living abroad

%pre
  %code.language-haml
    :preserve
      %h1.heading-medium Where do you live?
      =form_tag '/' do
        .form-group
          %fieldset
            %legend.visually-hidden Where do you live?
            = label_tag nil, class: "block-label selection-button-radio", for: "radio-1" do
              = radio_button_tag :place, :ni, nil, id: "radio-1"
              Northern Ireland
            = label_tag nil, class: "block-label selection-button-radio", for: "radio-2" do
              = radio_button_tag :place, :channel, nil, id: "radio-2"
              Isle of Man or the Channel Islands
            %p.form-block or
            = label_tag nil, class: "block-label selection-button-radio", for: "radio-3" do
              = radio_button_tag :place, :abroad, nil, id: "radio-3"
              I am a British citizen living abroad

%h3.heading-medium Stacked checkboxes
.example
  %h3.heading-medium Which types of waste do you transport regularly?
  %p Select all that apply
  =form_tag '/' do
    .form-group
      %fieldset
        %legend.visually-hidden Where do you live?
        = label_tag nil, class: "block-label selection-button-checkbox", for: "check-1" do
          = check_box_tag :waste_types, :animal, nil, id: "check-1"
          Waste from animal carcasses
        = label_tag nil, class: "block-label selection-button-checkbox", for: "check-2" do
          = check_box_tag :waste_types, :mines, nil, id: "check-2"
          Waste from mines or quarries
        = label_tag nil, class: "block-label selection-button-checkbox", for: "check-3" do
          = check_box_tag :waste_types, :farm, nil, id: "check-3"
          Farm or agricultural waste

%pre
  %code.language-haml
    :preserve
      %h3.heading-medium Which types of waste do you transport regularly?
      %p Select all that apply
      =form_tag '/' do
        .form-group
          %fieldset
            %legend.visually-hidden Where do you live?
            = label_tag nil, class: "block-label selection-button-checkbox", for: "check-1" do
              = check_box_tag :waste_types, :animal, nil, id: "check-1"
              Waste from animal carcasses
            = label_tag nil, class: "block-label selection-button-checkbox", for: "check-2" do
              = check_box_tag :waste_types, :mines, nil, id: "check-2"
              Waste from mines or quarries
            = label_tag nil, class: "block-label selection-button-checkbox", for: "check-3" do
              = check_box_tag :waste_types, :farm, nil, id: "check-3"
              Farm or agricultural waste

%p Only pre-select options if there’s a strong, user-centred reason to.
.example
  =form_tag '/' do
    .form-group
      =label_tag 'telephone-number','Enter your telephone number', class: 'form-label'
      =text_field_tag 'telephone-number', nil, class: 'form-control'
    = label_tag nil, class: "block-label selection-button-checkbox", for: "check-text" do
      = check_box_tag :contact, :textphone, true, id: "check-text"
      I need to be contacted using a text phone

%pre
  %code.language-haml
    :preserve
      =form_tag '/' do
        .form-group
          =label_tag 'telephone-number','Enter your telephone number', class: 'form-label'
          =text_field_tag 'telephone-number', nil, class: 'form-control'
        = label_tag nil, class: "block-label selection-button-checkbox", for: "check-text" do
          = check_box_tag :contact, :textphone, true, id: "check-text"
          I need to be contacted using a text phone

%p <a href="https://designpatterns.hackpad.com/Radio-buttons-and-checkboxes-8eBuLm9eRaz" rel="external"> Discuss radio buttons and checkboxes on the design patterns Hackpad</a>

%h3.heading-medium{ id: 'form-toggle-content'} Conditionally revealing content
%ul.list.list-bullet.text
  %li reveal additional questions, depending on the context
  %li a left border is used to emphasise this supporting information

%h4.heading-small{ id: 'form-toggle-content-radios'} Radio buttons
.text
  %p Choose an option below to see how this works.

.example
  %h1.heading-medium How do you want to be contacted?
  =form_tag '/' do
    .form-group
      %fieldset
        %legend.visually-hidden How do you want to be contacted?

        = label_tag nil, class: "block-label selection-button-radio", for: "radio-contact-1", 'data-target': 'email-contact' do
          = radio_button_tag :contact, :yes, nil, id: "radio-contact-1"
          Email
        #email-contact.form-group.js-hidden
          .form-group.panel.panel-border-narrow
            =label_tag 'contact-email','Email address', class: 'form-label'
            =text_field_tag 'contact-email', nil, class: 'form-control'

        = label_tag nil, class: "block-label selection-button-radio", for: "radio-contact-2", 'data-target': 'phone-contact' do
          = radio_button_tag :contact, :no, nil, id: "radio-contact-2"
          Phone
        #phone-contact.form-group.js-hidden
          .form-group.panel.panel-border-narrow
            =label_tag 'contact-phone','Phone number', class: 'form-label'
            =text_field_tag 'contact-phone', nil, class: 'form-control'
        = label_tag nil, class: "block-label selection-button-radio", for: "radio-contact-3", 'data-target': 'text-contact' do
          = radio_button_tag :contact, :yes, nil, id: "radio-contact-3"
          Text message
        #text-contact.form-group.js-hidden
          .form-group.panel.panel-border-narrow
            =label_tag 'contact-text-message','Mobile phone number', class: 'form-label'
            =text_field_tag 'contact-text-message', nil, class: 'form-control'

%pre
  %code.language-haml
    :preserve
      %h1.heading-medium How do you want to be contacted?
      =form_tag '/' do
        .form-group
          %fieldset
            %legend.visually-hidden How do you want to be contacted?

            = label_tag nil, class: "block-label selection-button-radio", for: "radio-contact-1", 'data-target': 'email-contact' do
              = radio_button_tag :contact, :yes, nil, id: "radio-contact-1"
              Email
            #email-contact.form-group.js-hidden
              .form-group.panel.panel-border-narrow
                =label_tag 'contact-email','Email address', class: 'form-label'
                =text_field_tag 'contact-email', nil, class: 'form-control'

            = label_tag nil, class: "block-label selection-button-radio", for: "radio-contact-2", 'data-target': 'phone-contact' do
              = radio_button_tag :contact, :no, nil, id: "radio-contact-2"
              Phone
            #phone-contact.form-group.js-hidden
              .form-group.panel.panel-border-narrow
                =label_tag 'contact-phone','Phone number', class: 'form-label'
                =text_field_tag 'contact-phone', nil, class: 'form-control'
            = label_tag nil, class: "block-label selection-button-radio", for: "radio-contact-3", 'data-target': 'text-contact' do
              = radio_button_tag :contact, :yes, nil, id: "radio-contact-3"
              Text message
            #text-contact.form-group.js-hidden
              .form-group.panel.panel-border-narrow
                =label_tag 'contact-text-message','Mobile phone number', class: 'form-label'
                =text_field_tag 'contact-text-message', nil, class: 'form-control'


%p.text In the code snippet above, the <code class="language-markup">data-target=""</code> attribute is present on every label, as each option reveals an extra field.
.text
  %p A grey left hand border is used to visually connect the revealed content with the question above.

.example
  .form-group
    .panel.panel-border-narrow{ id: 'contact-by-text'}
      =label_tag 'contact-text-message','Mobile phone number', class: 'form-label'
      =text_field_tag 'contact-text-message', nil, class: 'form-control'

%pre
  %code.language-haml
    :preserve
      .form-group
        .panel.panel-border-narrow{ id: 'contact-by-text'}
          =label_tag 'contact-text-message','Mobile phone number', class: 'form-label'
          =text_field_tag 'contact-text-message', nil, class: 'form-control'

.text
  %p The <a href="/typography/#typography-inset-text">inset text section</a> has more information on where and how to use panels (content with a grey left hand border).

%h4.heading-small{ id: 'form-toggle-content-checkboxes'} Checkboxes
%p Click on "Citizen of a different country" to see how this works.

.example
  %h1.heading-medium What is your nationality?
  %p Select all options that are relevant to you.

  =form_tag '/' do
    .form-group
    = label_tag nil, class: "block-label selection-button-checkbox", for: "check-text-1" do
      = check_box_tag :nationalities, :british, false, id: "check-text-1"
      British (including English, Scottish, Welsh and Northern Irish)
    = label_tag nil, class: "block-label selection-button-checkbox", for: "check-text-2" do
      = check_box_tag :nationalities, :irish, false, id: "check-text-2"
      Irish
    = label_tag nil, class: "block-label selection-button-checkbox", for: "check-text-3", 'data-target': 'country-text' do
      = check_box_tag :nationalities, :other, false, id: "check-text-3"
      Citizen of a different country
    #country-text.form-group.js-hidden
      .form-group.panel.panel-border-narrow
        =label_tag 'country-text','Country name', class: 'form-label'
        =text_field_tag 'country-text', nil, class: 'form-control'

%pre
  %code.language-haml
    :preserve
      %h1.heading-medium What is your nationality?
      %p Select all options that are relevant to you.

      =form_tag '/' do
        .form-group
        = label_tag nil, class: "block-label selection-button-checkbox", for: "check-text-1" do
          = check_box_tag :nationalities, :british, false, id: "check-text-1"
          British (including English, Scottish, Welsh and Northern Irish)
        = label_tag nil, class: "block-label selection-button-checkbox", for: "check-text-2" do
          = check_box_tag :nationalities, :irish, false, id: "check-text-2"
          Irish
        = label_tag nil, class: "block-label selection-button-checkbox", for: "check-text-3", 'data-target': 'country-text' do
          = check_box_tag :nationalities, :other, false, id: "check-text-3"
          Citizen of a different country
        #country-text.form-group.js-hidden
          .form-group.panel.panel-border-narrow
            =label_tag 'country-text','Country name', class: 'form-label'
            =text_field_tag 'country-text', nil, class: 'form-control'

%p <a href="https://designpatterns.hackpad.com/Conditional-form-fields-powy4GQmLIx" rel="external">Discuss conditional form fields on the design patterns Hackpad</a>




:javascript
  $(document).ready(function () {
    // Use GOV.UK selection-buttons.js to set selected
    // and focused states for block labels
    var $blockLabels = $(".block-label input[type='radio'], .block-label input[type='checkbox']")
    new GOVUK.SelectionButtons($blockLabels) // eslint-disable-line
        GOVUK.shimLinksWithButtonRole.init()
    // Show and hide toggled content
    // Where .block-label uses the data-target attribute
    // to toggle hidden content
    var showHideContent = new GOVUK.ShowHideContent()
    showHideContent.init()
  });
